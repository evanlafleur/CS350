# Quick Sort
# Written for CS350 | PSU 2021 Fall
# Hw3: Evan La Fleur, Ian Guy, Michael Robertson

import random
import time
import matplotlib.pyplot as plt
import sys
import logging

# logging.basicConfig(filename='sort.log', filemode='w', level= lg.DEBUG, format='%(levelname)s - %(message)s')

logging.basicConfig(level=logging.DEBUG, format='%(levelname)s - %(message)s')

# Starts by generating a number of Test Cases
# Creates Test Cases in increments of 100 starting at 1
# ex: 1, 101, 201... 100001

testCases = [i for i in range(1, 100001, 100)]
endTiming = []


# Finds a Good center point and continues from there
def findPartition(arr, low, high):
    i = (low - 1)
    pivot = arr[high]  # sets pivot to last element

    for j in range(low, high):  # increment for the range of arr
        if arr[j] <= pivot:
            i = i + 1;
            arr[i], arr[j] = arr[j], arr[i]
    arr[i + 1], arr[high] = arr[high], arr[i + 1]
    return (i + 1)


# Quick Sort Algorithm
def quickSort(arr, low, high):
    if len(arr) == 1:
        return arr
    if low < high:
        index = findPartition(arr, low, high)
        quickSort(arr, low, index - 1)
        quickSort(arr, index + 1, high)


def main():
    # tests for the cases which were set above
    for i in testCases:
        arr = [random.randint(1, 100000) for j in range(i)]  # generates the random numbers
        if i == 101:  # Sample case which outputs to a txt file
            n = len(arr)
            sys.stdout = open('log.txt', 'w')  # opens data stream to file
            print('---- Original ----')
            print(arr)
            start = time.time()  # collects Start
            quickSort(arr, 0, n - 1)
            end = time.time()  # collects End
            print('---- Sorted ----')
            print(arr)
            sys.stdout.close()  # closes data stream
            endTiming.append(end - start)  # Adds the difference between start and end to list for plot
            logging.info("Case: %d | Duration: %6.4f seconds", i, end - start)
        else:
            n = len(arr)
            start = time.time()
            quickSort(arr, 0, n - 1)
            end = time.time()
            endTiming.append(end - start)
            logging.info("Case: %d | Duration: %6.4f seconds", i, end - start)

    plt.plot(testCases, endTiming)  # generates plot
    plt.show()  # triggers matlab to display plot with gui


if __name__ == "__main__":
    main()
